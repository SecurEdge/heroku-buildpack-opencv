#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

title() {
  echo "-----> $*"
}

subtitle() {
  echo "       $*"
}


# parse params
BUILD_DIR=$1
CACHE_DIR=$2


BUILD_DIR=$1
CACHE_DIR=$2

export LD_LIBRARY_PATH="$BUILD_DIR/.heroku/vendor/lib"
export PATH="$BUILD_DIR/.heroku/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# Setup environment
mkdir -p $CACHE_DIR
title "Generating environment"
if [ ! -f $CACHE_DIR/vendor.tar.bz2 ]; then
	subtitle "Fetching..."
	curl -s -L "https://www.dropbox.com/s/cqok4ttjyb2glwu/vendor.tar.bz2?dl=1" > $CACHE_DIR/vendor.tar.bz2
fi
subtitle "Unpacking..."
tar -xvf $CACHE_DIR/vendor.tar.bz2 -C $BUILD_DIR

# vendor
echo "-----> Vendoring OpenCV shared objects into slug"
VENDORED_LIB="$BUILD_DIR/vendor/opencv/lib"
VENDORED_INCLUDE="$BUILD_DIR/vendor/opencv/include"


ls -laR $BUILD_DIR

export PKG_CONFIG_PATH="/app/vendor/opencv/lib/pkgconfig:$PKG_CONFIG_PATH"
export LD_LIBRARY_PATH="/app/vendor/opencv/lib:$LD_LIBRARY_PATH"

cat <<EOF > export
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:$PKG_CONFIG_PATH"
EOF

# runtime
mkdir -p "$BUILD_DIR/.profile.d"
echo "export LD_LIBRARY_PATH=\"/app/vendor/opencv/lib:\$LD_LIBRARY_PATH\"" > $BUILD_DIR/.profile.d/opencv.sh
echo "export PKG_CONFIG_PATH=\"/app/vendor/opencv/lib/pkgconfig:\$PKG_CONFIG_PATH\"" >> $BUILD_DIR/.profile.d/opencv.sh

